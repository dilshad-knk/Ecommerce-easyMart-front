import { Container } from "react-bootstrap";
import Header from "./components/Header";
import Home from "./components/Home";

import { Route, BrowserRouter as Router, Routes } from "react-router-dom";
import SignUp from "./components/seller/SignUp";
import SignIn from "./components/seller/SignIn";
import SellerMainPage from "./components/seller/SellerMainPage";
import MoreEditDltSellerProducts from "./components/seller/MoreEditDltSellerProducts";
import SellerDashboard from "./components/seller/SellerDashboard";
import AdminDashboard from './components/admin/AdminDashboard';
import ProductAdd from "./components/seller/ProductAdd";
import { useSelector } from "react-redux";
import ProtectedRoute from "./Utils/ProtectedRoute";
import ProtectedRouteAdmin from "./Utils/ProtectedRouteAdmin";
import AdminSignin from "./components/admin/AdminSignin";
import { useEffect, useState } from "react";
import { jwtDecode as jwt_decode, InvalidTokenError } from 'jwt-decode';
import instance from './axios/axios';
import { useDispatch } from 'react-redux';
import LoadingIndicator from "./LoadingIndicator";
import Footer from "./components/Footer";




function App() {


  const isSellerAuthenticated = useSelector((state) => state.seller.isSellerAuthenticated);
  const isadminAuthenticated = useSelector((state) => state.admin.isadminAuthenticated);
 



  
  
  



  return (
    <Router>
      <div className="d-flex flex-column vh-100">
      <Routes>
        <Route
          path="/*"
          element={
            <>
            <Header/>
              <Container fluid className="flex-grow-1">
                <Routes>

                  <Route path="/sellers" element={<SellerMainPage />} />
                  <Route index element={<Home />} />
                  <Route path="/sellers/signin" element={<SignIn />} />
                  <Route path="/sellers/signup" element={<SignUp />} />
                  <Route
                    path="/sellers/sellerDashboard"
                    element={
                      <ProtectedRoute isSellerAuthenticated={isSellerAuthenticated}>
                        <SellerDashboard />
                      </ProtectedRoute>
                    }
                  />
                   <Route
                    path="/sellers/product/:id"
                    element={
                      <ProtectedRoute isSellerAuthenticated={isSellerAuthenticated}>
                        <MoreEditDltSellerProducts />
                      </ProtectedRoute>
                    }
                  />
                </Routes>
              </Container>

             <Footer/>         
            </>
          }
        />

  
        <Route
          path="/admin"
          element={
              <ProtectedRouteAdmin isadminAuthenticated={isadminAuthenticated}>
                <AdminDashboard />
              </ProtectedRouteAdmin>
            
          }
        />
        <Route path="/admin-login" element={ <AdminSignin/> } />
        <Route 
     
      </Routes>

      </div>
    </Router>
  );
}

export default App;
